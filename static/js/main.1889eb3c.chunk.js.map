{"version":3,"sources":["LinechartExample.jsx","ScatterplotExample.jsx","App.js","index.js"],"names":["ChartExample","data","labels","datasets","label","backgroundColor","borderColor","options","responsive","scales","y","scaleLabel","display","labelString","fontColor","type","x","legend","scatterData","fill","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Scatterplot","App","className","src","process","title","sandbox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"or0FAKe,SAASA,IACtB,MAWMC,EAAO,CACXC,OAVa,CACb,UACA,WACA,QACA,QACA,MACA,QAKAC,SAAU,CAAC,CACTC,MAAO,qBACPC,gBAAiB,oBACjBC,YAAa,oBACbL,KAAM,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,OAIhC,OACE,cAAC,IAAD,CAAMM,QAtBQ,GAsBUN,KAAMA,I,aCrBlC,MAgBaM,EAAU,CACrBC,YAAY,EACZC,OAAQ,CACNC,EAAG,CACDC,WAAY,CACVC,SAAS,EACTC,YAAa,kBACbC,UAAW,SAEbC,KAAM,eAERC,EAAG,CACDL,WAAY,CACVC,SAAS,EACTC,YAAa,iBACbC,UAAW,WAIjBG,OAAQ,CACNL,SAAS,IAIAX,EAAO,CAClBE,SAAU,CACR,CACEF,KAAMiB,EA1CVd,MAAO,mBACPe,MAAM,EACNd,gBAAiB,uBACjBe,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,MAqCH,SAASC,IACtB,OAAO,cAAC,IAAD,CAAStB,QAASA,EAASN,KAAMA,ICb3B6B,MAtCf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,+CAGA,oCACE,wCACA,qBAAKA,UAAU,cAAf,SACE,wBAAQC,IAAG,UAAKC,mBAAL,mBAA8CC,MAAM,MAAMC,QAAQ,sCAE/E,mBAAGJ,UAAU,kBAAb,0NAMF,sBAAKA,UAAU,UAAf,UACE,gDACA,cAAC,EAAD,OAEF,sBAAKA,UAAU,UAAf,UACE,sDACA,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,gDACA,uNAEF,qBAAKA,UAAU,QAAf,SACE,cAACF,EAAD,gBC9BZO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.1889eb3c.chunk.js","sourcesContent":["import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\n\nexport default function ChartExample() {\n  const options = {};\n\n  const labels = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n  ];\n\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'My example dataset',\n      backgroundColor: 'rgb(255, 99, 132)',\n      borderColor: 'rgb(255, 99, 132)',\n      data: [0, 10, 5, 2, 20, 30, 45],\n    }]\n  };\n\n  return (\n    <Line options={options} data={data} />\n  );\n}\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Scatter } from 'react-chartjs-2';\nimport scatterData from './data/scatter.json';\n\n\nconst chartSettings = {\n  label: 'My First dataset',\n  fill: false,\n  backgroundColor: 'rgba(75,192,192,0.4)',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 3,\n  pointHitRadius: 10,\n};\n\n\nexport const options = {\n  responsive: true,\n  scales: {\n    y: {\n      scaleLabel: {\n        display: true,\n        labelString: \"Some Y Variable\",\n        fontColor: \"white\"\n      },\n      type: 'logarithmic',\n    },\n    x: {\n      scaleLabel: {\n        display: true,\n        labelString: \"The X Variable\",\n        fontColor: \"white\",\n      },\n    }\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const data = {\n  datasets: [\n    {\n      data: scatterData,\n      ...chartSettings,\n    },\n  ],\n};\n\nexport default function Scatterplot() {\n  return <Scatter options={options} data={data} />;\n}\n","import React from 'react';\nimport \"App.css\";\nimport Map from './MapExample';\nimport Linechart from './LinechartExample';\nimport Scatterplot from './ScatterplotExample';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        My Interactive Data Visualization\n      </header>\n      <section>\n        <h1>My Map</h1>\n        <div className=\"map-wrapper\">\n          <iframe src={`${process.env.PUBLIC_URL}/kepler.gl.html`} title=\"map\" sandbox=\"allow-scripts allow-same-origin\" />\n        </div>\n        <p className=\"app-description\">\n          This is my interactive data visualization. It uses a really interesting data set called DATASET.\n          Using this visualization, you can interact by CLICKING, DRAGGING, and more.\n          Please explore this dataset!\n        </p>\n      </section>\n      <div className=\"section\">\n        <h1>A Data Example</h1>\n        <Linechart />\n      </div>\n      <div className=\"section\">\n        <h1>Another Data Example</h1>\n        <div className=\"side-by-side\">\n          <div className=\"panel\">\n            <h2>Check this out</h2>\n            <p>Here is some data I collected. Let me explain what's going on. Let me also explain here what methods I used to collect the data, and what statistical methods I used to analyze it.</p>\n          </div>\n          <div className=\"panel\">\n            <Scatterplot />\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}